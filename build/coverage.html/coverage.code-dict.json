{"/home/travis/build/npmtest/node-npmtest-angularfire2/test.js":"/* istanbul instrument in package npmtest_angularfire2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angularfire2/lib.npmtest_angularfire2.js":"/* istanbul instrument in package npmtest_angularfire2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_angularfire2 = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_angularfire2 = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-angularfire2/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-angularfire2 && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_angularfire2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_angularfire2\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_angularfire2.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_angularfire2.rollup.js'] =\n            local.assetsDict['/assets.npmtest_angularfire2.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_angularfire2.__dirname + '/lib.npmtest_angularfire2.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/bundles/angularfire2.umd.js":"(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('firebase'), require('rxjs/scheduler/queue'), require('@angular/core'), require('rxjs/ReplaySubject'), require('rxjs/operator/mergeMap'), require('rxjs/observable/of'), require('rxjs/operator/map'), require('rxjs/Observable'), require('rxjs/observable/fromPromise'), require('rxjs/operator/observeOn'), require('rxjs/operator/combineLatest'), require('rxjs/operator/merge'), require('rxjs/operator/auditTime')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'firebase', 'rxjs/scheduler/queue', '@angular/core', 'rxjs/ReplaySubject', 'rxjs/operator/mergeMap', 'rxjs/observable/of', 'rxjs/operator/map', 'rxjs/Observable', 'rxjs/observable/fromPromise', 'rxjs/operator/observeOn', 'rxjs/operator/combineLatest', 'rxjs/operator/merge', 'rxjs/operator/auditTime'], factory) :\n    (factory((global.angularFire2 = global.angularFire2 || {}),global.firebase,global.Rx.Scheduler,global.ng.core,global.Rx,global.Rx.Observable.prototype,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype));\n}(this, (function (exports,firebase,rxjs_scheduler_queue,_angular_core,rxjs_ReplaySubject,rxjs_operator_mergeMap,rxjs_observable_of,rxjs_operator_map,rxjs_Observable,rxjs_observable_fromPromise,rxjs_operator_observeOn,rxjs_operator_combineLatest,rxjs_operator_merge,rxjs_operator_auditTime) { 'use strict';\n\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\nfunction hasKey(obj, key) {\n    return obj && obj[key] !== undefined;\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\nfunction isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nfunction isAFUnwrappedSnapshot(value) {\n    return typeof value.$key === 'string';\n}\nfunction isFirebaseQuery(value) {\n    return typeof value.orderByChild === 'function';\n}\nfunction isEmptyObject(obj) {\n    if (isNil(obj)) {\n        return false;\n    }\n    return Object.keys(obj).length === 0 && JSON.stringify(obj) === JSON.stringify({});\n}\nfunction unwrapMapFn(snapshot) {\n    var unwrapped = !isNil(snapshot.val()) ? snapshot.val() : { $value: null };\n    if ((/string|number|boolean/).test(typeof unwrapped)) {\n        unwrapped = {\n            $value: unwrapped\n        };\n    }\n    Object.defineProperty(unwrapped, '$key', {\n        value: snapshot.ref.key,\n        enumerable: false\n    });\n    Object.defineProperty(unwrapped, '$exists', {\n        value: function () {\n            return snapshot.exists();\n        },\n        enumerable: false\n    });\n    return unwrapped;\n}\nfunction checkForUrlOrFirebaseRef(urlOrRef, cases) {\n    if (isString(urlOrRef)) {\n        return cases.isUrl();\n    }\n    if (isFirebaseRef(urlOrRef)) {\n        return cases.isRef();\n    }\n    if (isFirebaseQuery(urlOrRef)) {\n        return cases.isQuery();\n    }\n    throw new Error('Provide a url or a Firebase database reference');\n}\nfunction stripTrailingSlash(value) {\n    if (value.substring(value.length - 1, value.length) === '/') {\n        return value.substring(0, value.length - 1);\n    }\n    else {\n        return value;\n    }\n}\nfunction stripLeadingSlash(value) {\n    if (value.substring(0, 1) === '/') {\n        return value.substring(1, value.length);\n    }\n    else {\n        return value;\n    }\n}\nvar ZoneScheduler = (function () {\n    function ZoneScheduler(zone) {\n        this.zone = zone;\n    }\n    ZoneScheduler.prototype.schedule = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.zone.run(function () { return rxjs_scheduler_queue.queue.schedule.apply(rxjs_scheduler_queue.queue, args); });\n    };\n    return ZoneScheduler;\n}());\n\nvar FirebaseConfig = new _angular_core.OpaqueToken('FirebaseUrl');\nvar FirebaseApp = new _angular_core.OpaqueToken('FirebaseApp');\nvar FirebaseAuthConfig = new _angular_core.OpaqueToken('FirebaseAuthConfig');\nvar FirebaseUserConfig = new _angular_core.OpaqueToken('FirebaseUserConfig');\nvar FirebaseAppName = new _angular_core.OpaqueToken('FirebaseAppName');\nvar WindowLocation = new _angular_core.OpaqueToken('WindowLocation');\nvar FirebaseRef = FirebaseApp;\nvar FirebaseUrl = FirebaseConfig;\n\nvar AuthBackend = (function () {\n    function AuthBackend() {\n    }\n    return AuthBackend;\n}());\n\n(function (AuthProviders) {\n    AuthProviders[AuthProviders[\"Github\"] = 0] = \"Github\";\n    AuthProviders[AuthProviders[\"Twitter\"] = 1] = \"Twitter\";\n    AuthProviders[AuthProviders[\"Facebook\"] = 2] = \"Facebook\";\n    AuthProviders[AuthProviders[\"Google\"] = 3] = \"Google\";\n    AuthProviders[AuthProviders[\"Password\"] = 4] = \"Password\";\n    AuthProviders[AuthProviders[\"Anonymous\"] = 5] = \"Anonymous\";\n    AuthProviders[AuthProviders[\"Custom\"] = 6] = \"Custom\";\n})(exports.AuthProviders || (exports.AuthProviders = {}));\n\n\n(function (AuthMethods) {\n    AuthMethods[AuthMethods[\"Popup\"] = 0] = \"Popup\";\n    AuthMethods[AuthMethods[\"Redirect\"] = 1] = \"Redirect\";\n    AuthMethods[AuthMethods[\"Anonymous\"] = 2] = \"Anonymous\";\n    AuthMethods[AuthMethods[\"Password\"] = 3] = \"Password\";\n    AuthMethods[AuthMethods[\"OAuthToken\"] = 4] = \"OAuthToken\";\n    AuthMethods[AuthMethods[\"CustomToken\"] = 5] = \"CustomToken\";\n})(exports.AuthMethods || (exports.AuthMethods = {}));\n\nfunction authDataToAuthState(authData, providerData) {\n    if (!authData)\n        return null;\n    var providerId;\n    var uid = authData.uid;\n    var authState = { auth: authData, uid: uid, provider: null };\n    if (authData.isAnonymous) {\n        providerId = 'anonymous';\n        authState.provider = exports.AuthProviders.Anonymous;\n        authState.anonymous = true;\n        return authState;\n    }\n    else if (authData.providerData[0] === undefined || authData.providerData[0] === null) {\n        providerId = 'custom';\n        authState.provider = exports.AuthProviders.Custom;\n        return authState;\n    }\n    else {\n        providerId = authData.providerData[0].providerId;\n    }\n    switch (providerId) {\n        case 'github.com':\n            authState.github = providerData;\n            authState.provider = exports.AuthProviders.Github;\n            break;\n        case 'twitter.com':\n            authState.twitter = providerData;\n            authState.provider = exports.AuthProviders.Twitter;\n            break;\n        case 'facebook.com':\n            authState.facebook = providerData;\n            authState.provider = exports.AuthProviders.Facebook;\n            break;\n        case 'google.com':\n            authState.google = providerData;\n            authState.provider = exports.AuthProviders.Google;\n            break;\n        case 'password':\n            authState.provider = exports.AuthProviders.Password;\n            break;\n        case 'custom':\n            authState.provider = exports.AuthProviders.Custom;\n            break;\n        default:\n            throw new Error(\"Unsupported firebase auth provider \" + providerId);\n    }\n    return authState;\n}\nfunction stripProviderId(providerId) {\n    var providerStripped = /(.*)\\.com$/.exec(providerId);\n    if (providerStripped && providerStripped.length === 2) {\n        return providerStripped[1];\n    }\n    return null;\n}\n\nvar __extends = (undefined && undefined.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$1 = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar kBufferSize = 1;\nvar firebaseAuthConfig = function (config) {\n    return { provide: FirebaseAuthConfig, useValue: config };\n};\nexports.AngularFireAuth = (function (_super) {\n    __extends(AngularFireAuth, _super);\n    function AngularFireAuth(_authBackend, loc, _config) {\n        var _this = _super.call(this, kBufferSize) || this;\n        _this._authBackend = _authBackend;\n        _this._config = _config;\n        _this._credentialCache = {};\n        var firstPass = true;\n        var onAuth = _this._authBackend.onAuth();\n        rxjs_operator_mergeMap.mergeMap.call(onAuth, function (authState) {\n            if (firstPass) {\n                firstPass = false;\n                if (['http:', 'https:'].indexOf(loc.protocol) > -1) {\n                    return rxjs_operator_map.map.call(_this._authBackend.getRedirectResult(), function (userCredential) {\n                        if (userCredential && userCredential.credential) {\n                            authState = attachCredentialToAuthState(authState, userCredential.credential, userCredential.credential.provider);\n                            _this._credentialCache[userCredential.credential.provider] = userCredential.credential;\n                        }\n                        return authState;\n                    });\n                }\n            }\n            return rxjs_observable_of.of(authState);\n        })\n            .subscribe(function (authData) { return _this._emitAuthData(authData); });\n        return _this;\n    }\n    AngularFireAuth.prototype.login = function (obj1, obj2) {\n        var _this = this;\n        var config = null;\n        var credentials = null;\n        if (arguments.length > 2) {\n            return this._reject('Login only accepts a maximum of two arguments.');\n        }\n        else if (arguments.length == 2) {\n            credentials = obj1;\n            config = obj2;\n        }\n        else if (arguments.length == 1) {\n            if (obj1.password && obj1.email) {\n                credentials = obj1;\n                config = {};\n            }\n            else {\n                config = obj1;\n            }\n        }\n        config = this._mergeConfigs(config);\n        if (isNil(config.method)) {\n            return this._reject('You must provide a login method');\n        }\n        var providerMethods = [exports.AuthMethods.Popup, exports.AuthMethods.Redirect, exports.AuthMethods.OAuthToken];\n        if (providerMethods.indexOf(config.method) != -1) {\n            if (isNil(config.provider)) {\n                return this._reject('You must include a provider to use this auth method.');\n            }\n        }\n        var credentialsMethods = [exports.AuthMethods.Password, exports.AuthMethods.OAuthToken, exports.AuthMethods.CustomToken];\n        if (credentialsMethods.indexOf(config.method) != -1) {\n            if (!credentials) {\n                return this._reject('You must include credentials to use this auth method.');\n            }\n        }\n        switch (config.method) {\n            case exports.AuthMethods.Popup:\n                return this._authBackend.authWithOAuthPopup(config.provider, this._scrubConfig(config))\n                    .then(function (userCredential) {\n                    _this._credentialCache[userCredential.credential.provider] = userCredential.credential;\n                    return authDataToAuthState(userCredential.user, userCredential.credential);\n                });\n            case exports.AuthMethods.Redirect:\n                return this._authBackend.authWithOAuthRedirect(config.provider, this._scrubConfig(config));\n            case exports.AuthMethods.Anonymous:\n                return this._authBackend.authAnonymously(this._scrubConfig(config));\n            case exports.AuthMethods.Password:\n                return this._authBackend.authWithPassword(credentials);\n            case exports.AuthMethods.OAuthToken:\n                return this._authBackend.authWithOAuthToken(credentials, this._scrubConfig(config));\n            case exports.AuthMethods.CustomToken:\n                return this._authBackend.authWithCustomToken(credentials);\n        }\n    };\n    AngularFireAuth.prototype.logout = function () {\n        return this._authBackend.unauth();\n    };\n    AngularFireAuth.prototype.getAuth = function () {\n        console.warn(\"WARNING: the getAuth() API has changed behavior since adding support for Firebase 3.\\n    This will return null for the initial value when the page loads, even if the user is actually logged in.\\n    Please observe the actual authState asynchronously by subscribing to the auth service: af.auth.subscribe().\\n    The getAuth method will be removed in future releases\");\n        return this._authBackend.getAuth();\n    };\n    AngularFireAuth.prototype.createUser = function (credentials) {\n        return this._authBackend.createUser(credentials);\n    };\n    AngularFireAuth.prototype._mergeConfigs = function (config) {\n        if (this._config == null)\n            return config;\n        return Object.assign({}, this._config, config);\n    };\n    AngularFireAuth.prototype._reject = function (msg) {\n        return new Promise(function (res, rej) {\n            return rej(msg);\n        });\n    };\n    AngularFireAuth.prototype._scrubConfig = function (config, scrubProvider) {\n        if (scrubProvider === void 0) { scrubProvider = true; }\n        var scrubbed = Object.assign({}, config);\n        if (scrubProvider) {\n            delete scrubbed.provider;\n        }\n        delete scrubbed.method;\n        return scrubbed;\n    };\n    AngularFireAuth.prototype._emitAuthData = function (authData) {\n        if (authData == null) {\n            this.next(null);\n        }\n        else {\n            if (authData.auth && authData.auth.providerData && authData.auth.providerData[0]) {\n                var providerId = authData.auth.providerData[0].providerId;\n                var providerCredential = this._credentialCache[providerId];\n                if (providerCredential) {\n                    authData = attachCredentialToAuthState(authData, providerCredential, providerId);\n                }\n            }\n            this.next(authData);\n        }\n    };\n    return AngularFireAuth;\n}(rxjs_ReplaySubject.ReplaySubject));\nexports.AngularFireAuth = __decorate$1([\n    _angular_core.Injectable(),\n    __param$1(1, _angular_core.Inject(WindowLocation)),\n    __param$1(2, _angular_core.Optional()), __param$1(2, _angular_core.Inject(FirebaseAuthConfig)),\n    __metadata$1(\"design:paramtypes\", [AuthBackend, Object, Object])\n], exports.AngularFireAuth);\nfunction attachCredentialToAuthState(authState, credential, providerId) {\n    if (!authState)\n        return authState;\n    authState[stripProviderId(providerId)] = credential;\n    return authState;\n}\n\nvar __extends$1 = (undefined && undefined.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$2 = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a = firebase.auth;\nvar FacebookAuthProvider = _a.FacebookAuthProvider;\nvar GithubAuthProvider = _a.GithubAuthProvider;\nvar GoogleAuthProvider = _a.GoogleAuthProvider;\nvar TwitterAuthProvider = _a.TwitterAuthProvider;\nvar FirebaseSdkAuthBackend = (function (_super) {\n    __extends$1(FirebaseSdkAuthBackend, _super);\n    function FirebaseSdkAuthBackend(_fbApp) {\n        var _this = _super.call(this) || this;\n        _this._fbAuth = _fbApp.auth();\n        return _this;\n    }\n    FirebaseSdkAuthBackend.prototype.createUser = function (creds) {\n        return castPromise(this._fbAuth.createUserWithEmailAndPassword(creds.email, creds.password))\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.getAuth = function () {\n        return authDataToAuthState(this._fbAuth.currentUser);\n    };\n    FirebaseSdkAuthBackend.prototype.onAuth = function () {\n        var _this = this;\n        var stateChange = rxjs_Observable.Observable.create(function (observer) {\n            return _this._fbAuth.onAuthStateChanged(observer);\n        });\n        var authState = rxjs_operator_map.map.call(stateChange, function (user) {\n            if (!user)\n                return null;\n            return authDataToAuthState(user, user.providerData[0]);\n        });\n        return rxjs_operator_observeOn.observeOn.call(authState, new ZoneScheduler(Zone.current));\n    };\n    FirebaseSdkAuthBackend.prototype.unauth = function () {\n        return this._fbAuth.signOut();\n    };\n    FirebaseSdkAuthBackend.prototype.authWithCustomToken = function (token) {\n        return castPromise((this._fbAuth.signInWithCustomToken(token)))\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.authAnonymously = function () {\n        return castPromise(this._fbAuth.signInAnonymously())\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.authWithPassword = function (creds) {\n        return castPromise(this._fbAuth.signInWithEmailAndPassword(creds.email, creds.password))\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.authWithOAuthPopup = function (provider, options) {\n        var providerFromFirebase = this._enumToAuthProvider(provider);\n        if (options.scope) {\n            options.scope.forEach(function (scope) { return providerFromFirebase.addScope(scope); });\n        }\n        return castPromise(this._fbAuth.signInWithPopup(providerFromFirebase));\n    };\n    FirebaseSdkAuthBackend.prototype.authWithOAuthRedirect = function (provider, options) {\n        return castPromise(this._fbAuth.signInWithRedirect(this._enumToAuthProvider(provider)));\n    };\n    FirebaseSdkAuthBackend.prototype.authWithOAuthToken = function (credential) {\n        return castPromise(this._fbAuth.signInWithCredential(credential))\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.getRedirectResult = function () {\n        return rxjs_observable_fromPromise.fromPromise(castPromise(this._fbAuth.getRedirectResult()));\n    };\n    FirebaseSdkAuthBackend.prototype._enumToAuthProvider = function (providerId) {\n        switch (providerId) {\n            case exports.AuthProviders.Github:\n                return new GithubAuthProvider();\n            case exports.AuthProviders.Twitter:\n                return new TwitterAuthProvider();\n            case exports.AuthProviders.Facebook:\n                return new FacebookAuthProvider();\n            case exports.AuthProviders.Google:\n                return new GoogleAuthProvider();\n            default:\n                throw new Error(\"Unsupported firebase auth provider \" + providerId);\n        }\n    };\n    return FirebaseSdkAuthBackend;\n}(AuthBackend));\nFirebaseSdkAuthBackend = __decorate$2([\n    _angular_core.Injectable(),\n    __param$2(0, _angular_core.Inject(FirebaseApp)),\n    __metadata$2(\"design:paramtypes\", [Object])\n], FirebaseSdkAuthBackend);\nfunction castPromise(promiseLike) {\n    return Promise.resolve(promiseLike);\n}\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$3 = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$3 = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nexports.AngularFireDatabase = (function () {\n    function AngularFireDatabase$$1(fbConfig, fbApp) {\n        this.fbConfig = fbConfig;\n        this.fbApp = fbApp;\n    }\n    AngularFireDatabase$$1.prototype.list = function (urlOrRef, opts) {\n        var _this = this;\n        return checkForUrlOrFirebaseRef(urlOrRef, {\n            isUrl: function () { return FirebaseListFactory(_this.fbApp.database().refFromURL(getAbsUrl(_this.fbConfig, urlOrRef)), opts); },\n            isRef: function () { return FirebaseListFactory(urlOrRef); }\n        });\n    };\n    AngularFireDatabase$$1.prototype.object = function (urlOrRef, opts) {\n        var _this = this;\n        return checkForUrlOrFirebaseRef(urlOrRef, {\n            isUrl: function () { return FirebaseObjectFactory$$1(_this.fbApp.database().refFromURL(getAbsUrl(_this.fbConfig, urlOrRef)), opts); },\n            isRef: function () { return FirebaseObjectFactory$$1(urlOrRef); }\n        });\n    };\n    return AngularFireDatabase$$1;\n}());\nexports.AngularFireDatabase = __decorate$3([\n    _angular_core.Injectable(),\n    __param$3(0, _angular_core.Inject(FirebaseConfig)),\n    __param$3(1, _angular_core.Inject(FirebaseApp)),\n    __metadata$3(\"design:paramtypes\", [Object, Object])\n], exports.AngularFireDatabase);\nfunction getAbsUrl(root, url) {\n    if (!(/^[a-z]+:\\/\\/.*/.test(url))) {\n        url = root.databaseURL + '/' + stripLeadingSlash(url);\n    }\n    return url;\n}\n\nvar __extends$2 = (undefined && undefined.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar FirebaseListObservable = (function (_super) {\n    __extends$2(FirebaseListObservable, _super);\n    function FirebaseListObservable($ref, subscribe) {\n        var _this = _super.call(this, subscribe) || this;\n        _this.$ref = $ref;\n        return _this;\n    }\n    FirebaseListObservable.prototype.lift = function (operator) {\n        var observable = new FirebaseListObservable(this.$ref);\n        observable.source = this;\n        observable.operator = operator;\n        observable.$ref = this.$ref;\n        return observable;\n    };\n    FirebaseListObservable.prototype.push = function (val) {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.ref.push(val);\n    };\n    FirebaseListObservable.prototype.update = function (item, value) {\n        var _this = this;\n        return this._checkOperationCases(item, {\n            stringCase: function () { return _this.$ref.ref.child(item).update(value); },\n            firebaseCase: function () { return item.update(value); },\n            snapshotCase: function () { return item.ref.update(value); },\n            unwrappedSnapshotCase: function () { return _this.$ref.ref.child(item.$key).update(value); }\n        });\n    };\n    FirebaseListObservable.prototype.remove = function (item) {\n        var _this = this;\n        if (!item) {\n            return this.$ref.ref.remove();\n        }\n        return this._checkOperationCases(item, {\n            stringCase: function () { return _this.$ref.ref.child(item).remove(); },\n            firebaseCase: function () { return item.remove(); },\n            snapshotCase: function () { return item.ref.remove(); },\n            unwrappedSnapshotCase: function () { return _this.$ref.ref.child(item.$key).remove(); }\n        });\n    };\n    FirebaseListObservable.prototype._checkOperationCases = function (item, cases) {\n        if (isString(item)) {\n            return cases.stringCase();\n        }\n        else if (isFirebaseRef(item)) {\n            return cases.firebaseCase();\n        }\n        else if (isFirebaseDataSnapshot(item)) {\n            return cases.snapshotCase();\n        }\n        else if (isAFUnwrappedSnapshot(item)) {\n            return cases.unwrappedSnapshotCase();\n        }\n        throw new Error(\"Method requires a key, snapshot, reference, or unwrapped snapshot. Got: \" + typeof item);\n    };\n    return FirebaseListObservable;\n}(rxjs_Observable.Observable));\n\nvar OrderByOptions;\n(function (OrderByOptions) {\n    OrderByOptions[OrderByOptions[\"Child\"] = 0] = \"Child\";\n    OrderByOptions[OrderByOptions[\"Key\"] = 1] = \"Key\";\n    OrderByOptions[OrderByOptions[\"Value\"] = 2] = \"Value\";\n    OrderByOptions[OrderByOptions[\"Priority\"] = 3] = \"Priority\";\n})(OrderByOptions || (OrderByOptions = {}));\nvar LimitToOptions;\n(function (LimitToOptions) {\n    LimitToOptions[LimitToOptions[\"First\"] = 0] = \"First\";\n    LimitToOptions[LimitToOptions[\"Last\"] = 1] = \"Last\";\n})(LimitToOptions || (LimitToOptions = {}));\nvar QueryOptions;\n(function (QueryOptions) {\n    QueryOptions[QueryOptions[\"EqualTo\"] = 0] = \"EqualTo\";\n    QueryOptions[QueryOptions[\"StartAt\"] = 1] = \"StartAt\";\n    QueryOptions[QueryOptions[\"EndAt\"] = 2] = \"EndAt\";\n})(QueryOptions || (QueryOptions = {}));\n\nfunction observeQuery(query, audit) {\n    if (audit === void 0) { audit = true; }\n    if (isNil(query)) {\n        return rxjs_observable_of.of(null);\n    }\n    return rxjs_Observable.Observable.create(function (observer) {\n        var combined = rxjs_operator_combineLatest.combineLatest.call(getOrderObservables(query), getStartAtObservable(query), getEndAtObservable(query), getEqualToObservable(query), getLimitToObservables(query));\n        if (audit) {\n            combined = rxjs_operator_auditTime.auditTime.call(combined, 0);\n        }\n        combined\n            .subscribe(function (_a) {\n            var orderBy = _a[0], startAt = _a[1], endAt = _a[2], equalTo = _a[3], limitTo = _a[4];\n            var serializedOrder = {};\n            if (!isNil(orderBy) && !isNil(orderBy.value)) {\n                switch (orderBy.key) {\n                    case OrderByOptions.Key:\n                        serializedOrder = { orderByKey: orderBy.value };\n                        break;\n                    case OrderByOptions.Priority:\n                        serializedOrder = { orderByPriority: orderBy.value };\n                        break;\n                    case OrderByOptions.Value:\n                        serializedOrder = { orderByValue: orderBy.value };\n                        break;\n                    case OrderByOptions.Child:\n                        serializedOrder = { orderByChild: orderBy.value };\n                        break;\n                }\n            }\n            if (!isNil(limitTo) && !isNil(limitTo.value)) {\n                switch (limitTo.key) {\n                    case LimitToOptions.First:\n                        serializedOrder.limitToFirst = limitTo.value;\n                        break;\n                    case LimitToOptions.Last: {\n                        serializedOrder.limitToLast = limitTo.value;\n                        break;\n                    }\n                }\n            }\n            if (startAt !== undefined) {\n                serializedOrder.startAt = startAt;\n            }\n            if (endAt !== undefined) {\n                serializedOrder.endAt = endAt;\n            }\n            if (equalTo !== undefined) {\n                serializedOrder.equalTo = equalTo;\n            }\n            observer.next(serializedOrder);\n        });\n    });\n}\nfunction getOrderObservables(query) {\n    var observables = ['orderByChild', 'orderByKey', 'orderByValue', 'orderByPriority']\n        .map(function (key, option) {\n        return ({ key: key, option: option });\n    })\n        .filter(function (_a) {\n        var key = _a.key, option = _a.option;\n        return !isNil(query[key]);\n    })\n        .map(function (_a) {\n        var key = _a.key, option = _a.option;\n        return mapToOrderBySelection(query[key], option);\n    });\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    else if (observables.length > 1) {\n        return rxjs_operator_merge.merge.apply(observables[0], observables.slice(1));\n    }\n    else {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next(null);\n        });\n    }\n}\nfunction getLimitToObservables(query) {\n    var observables = ['limitToFirst', 'limitToLast']\n        .map(function (key, option) { return ({ key: key, option: option }); })\n        .filter(function (_a) {\n        var key = _a.key, option = _a.option;\n        return !isNil(query[key]);\n    })\n        .map(function (_a) {\n        var key = _a.key, option = _a.option;\n        return mapToLimitToSelection(query[key], option);\n    });\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    else if (observables.length > 1) {\n        var mergedObs = rxjs_operator_merge.merge.apply(observables[0], observables.slice(1));\n        return mergedObs;\n    }\n    else {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next(null);\n        });\n    }\n}\nfunction getStartAtObservable(query) {\n    if (query.startAt instanceof rxjs_Observable.Observable) {\n        return query.startAt;\n    }\n    else if (hasKey(query, 'startAt')) {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next(query.startAt);\n        });\n    }\n    else {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next(undefined);\n        });\n    }\n}\nfunction getEndAtObservable(query) {\n    if (query.endAt instanceof rxjs_Observable.Observable) {\n        return query.endAt;\n    }\n    else if (hasKey(query, 'endAt')) {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next(query.endAt);\n        });\n    }\n    else {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next(undefined);\n        });\n    }\n}\nfunction getEqualToObservable(query) {\n    if (query.equalTo instanceof rxjs_Observable.Observable) {\n        return query.equalTo;\n    }\n    else if (hasKey(query, 'equalTo')) {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next(query.equalTo);\n        });\n    }\n    else {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next(undefined);\n        });\n    }\n}\nfunction mapToOrderBySelection(value, key) {\n    if (value instanceof rxjs_Observable.Observable) {\n        return rxjs_operator_map.map\n            .call(value, function (value) {\n            return ({ value: value, key: key });\n        });\n    }\n    else {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next({ key: key, value: value });\n        });\n    }\n}\nfunction mapToLimitToSelection(value, key) {\n    if (value instanceof rxjs_Observable.Observable) {\n        return rxjs_operator_map.map\n            .call(value, function (value) { return ({ value: value, key: key }); });\n    }\n    else {\n        return new rxjs_Observable.Observable(function (subscriber) {\n            subscriber.next({ key: key, value: value });\n        });\n    }\n}\n\nfunction FirebaseListFactory(absoluteUrlOrDbRef, _a) {\n    var _b = _a === void 0 ? {} : _a, preserveSnapshot = _b.preserveSnapshot, _c = _b.query, query = _c === void 0 ? {} : _c;\n    var ref;\n    checkForUrlOrFirebaseRef(absoluteUrlOrDbRef, {\n        isUrl: function () { return ref = firebase.database().refFromURL(absoluteUrlOrDbRef); },\n        isRef: function () { return ref = absoluteUrlOrDbRef; },\n        isQuery: function () { return ref = absoluteUrlOrDbRef; },\n    });\n    if ((isFirebaseRef(absoluteUrlOrDbRef) ||\n        isString(absoluteUrlOrDbRef)) &&\n        isEmptyObject(query)) {\n        return firebaseListObservable(ref, { preserveSnapshot: preserveSnapshot });\n    }\n    var queryObs = observeQuery(query);\n    return new FirebaseListObservable(ref, function (subscriber) {\n        var sub = rxjs_operator_mergeMap.mergeMap.call(rxjs_operator_map.map.call(queryObs, function (query) {\n            var queried = ref;\n            if (query.orderByChild) {\n                queried = queried.orderByChild(query.orderByChild);\n            }\n            else if (query.orderByKey) {\n                queried = queried.orderByKey();\n            }\n            else if (query.orderByPriority) {\n                queried = queried.orderByPriority();\n            }\n            else if (query.orderByValue) {\n                queried = queried.orderByValue();\n            }\n            if (hasKey(query, \"equalTo\")) {\n                queried = queried.equalTo(query.equalTo);\n                if (hasKey(query, \"startAt\") || hasKey(query, \"endAt\")) {\n                    throw new Error('Query Error: Cannot use startAt or endAt with equalTo.');\n                }\n                if (!isNil(query.limitToFirst)) {\n                    queried = queried.limitToFirst(query.limitToFirst);\n                }\n                if (!isNil(query.limitToLast)) {\n                    queried = queried.limitToLast(query.limitToLast);\n                }\n                return queried;\n            }\n            if (hasKey(query, \"startAt\")) {\n                if (hasKey(query.startAt, \"value\")) {\n                    queried = queried.startAt(query.startAt.value, query.startAt.key);\n                }\n                else {\n                    queried = queried.startAt(query.startAt);\n                }\n            }\n            if (hasKey(query, \"endAt\")) {\n                queried = queried.endAt(query.endAt);\n            }\n            if (!isNil(query.limitToFirst) && query.limitToLast) {\n                throw new Error('Query Error: Cannot use limitToFirst with limitToLast.');\n            }\n            if (!isNil(query.limitToFirst)) {\n                queried = queried.limitToFirst(query.limitToFirst);\n            }\n            if (!isNil(query.limitToLast)) {\n                queried = queried.limitToLast(query.limitToLast);\n            }\n            return queried;\n        }), function (queryRef, ix) {\n            return firebaseListObservable(queryRef, { preserveSnapshot: preserveSnapshot });\n        })\n            .subscribe(subscriber);\n        return function () { return sub.unsubscribe(); };\n    });\n}\nfunction firebaseListObservable(ref, _a) {\n    var preserveSnapshot = (_a === void 0 ? {} : _a).preserveSnapshot;\n    var toValue = preserveSnapshot ? (function (snapshot) { return snapshot; }) : unwrapMapFn;\n    var toKey = preserveSnapshot ? (function (value) { return value.key; }) : (function (value) { return value.$key; });\n    var listObs = new FirebaseListObservable(ref, function (obs) {\n        var handles = [];\n        var hasLoaded = false;\n        var lastLoadedKey = null;\n        var array = [];\n        ref.once('value', function (snap) {\n            if (snap.exists()) {\n                snap.forEach(function (child) {\n                    lastLoadedKey = child.key;\n                });\n                if (array.find(function (child) { return toKey(child) === lastLoadedKey; })) {\n                    hasLoaded = true;\n                    obs.next(array);\n                }\n            }\n            else {\n                hasLoaded = true;\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        var addFn = ref.on('child_added', function (child, prevKey) {\n            array = onChildAdded(array, toValue(child), toKey, prevKey);\n            if (hasLoaded) {\n                obs.next(array);\n            }\n            else if (child.key === lastLoadedKey) {\n                hasLoaded = true;\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        handles.push({ event: 'child_added', handle: addFn });\n        var remFn = ref.on('child_removed', function (child) {\n            array = onChildRemoved(array, toValue(child), toKey);\n            if (hasLoaded) {\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        handles.push({ event: 'child_removed', handle: remFn });\n        var chgFn = ref.on('child_changed', function (child, prevKey) {\n            array = onChildChanged(array, toValue(child), toKey, prevKey);\n            if (hasLoaded) {\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        handles.push({ event: 'child_changed', handle: chgFn });\n        return function () {\n            handles.forEach(function (item) {\n                ref.off(item.event, item.handle);\n            });\n        };\n    });\n    return rxjs_operator_observeOn.observeOn.call(listObs, new ZoneScheduler(Zone.current));\n}\nfunction onChildAdded(arr, child, toKey, prevKey) {\n    if (!arr.length) {\n        return [child];\n    }\n    return arr.reduce(function (accumulator, curr, i) {\n        if (!prevKey && i === 0) {\n            accumulator.push(child);\n        }\n        accumulator.push(curr);\n        if (prevKey && prevKey === toKey(curr)) {\n            accumulator.push(child);\n        }\n        return accumulator;\n    }, []);\n}\nfunction onChildChanged(arr, child, toKey, prevKey) {\n    var childKey = toKey(child);\n    return arr.reduce(function (accumulator, val, i) {\n        var valKey = toKey(val);\n        if (!prevKey && i == 0) {\n            accumulator.push(child);\n            if (valKey !== childKey) {\n                accumulator.push(val);\n            }\n        }\n        else if (valKey === prevKey) {\n            accumulator.push(val);\n            accumulator.push(child);\n        }\n        else if (valKey !== childKey) {\n            accumulator.push(val);\n        }\n        return accumulator;\n    }, []);\n}\nfunction onChildRemoved(arr, child, toKey) {\n    var childKey = toKey(child);\n    return arr.filter(function (c) { return toKey(c) !== childKey; });\n}\n\nfunction FirebaseObjectFactory$$1(absoluteUrlOrDbRef, _a) {\n    var preserveSnapshot = (_a === void 0 ? {} : _a).preserveSnapshot;\n    var ref;\n    checkForUrlOrFirebaseRef(absoluteUrlOrDbRef, {\n        isUrl: function () { return ref = firebase.database().refFromURL(absoluteUrlOrDbRef); },\n        isRef: function () { return ref = absoluteUrlOrDbRef; }\n    });\n    var objectObservable = new FirebaseObjectObservable(function (obs) {\n        var fn = ref.on('value', function (snapshot) {\n            obs.next(preserveSnapshot ? snapshot : unwrapMapFn(snapshot));\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        return function () { return ref.off('value', fn); };\n    }, ref);\n    return rxjs_operator_observeOn.observeOn.call(objectObservable, new ZoneScheduler(Zone.current));\n}\n\nvar __extends$3 = (undefined && undefined.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar FirebaseObjectObservable = (function (_super) {\n    __extends$3(FirebaseObjectObservable, _super);\n    function FirebaseObjectObservable(subscribe, $ref) {\n        var _this = _super.call(this, subscribe) || this;\n        _this.$ref = $ref;\n        return _this;\n    }\n    FirebaseObjectObservable.prototype.lift = function (operator) {\n        var observable = new FirebaseObjectObservable();\n        observable.source = this;\n        observable.operator = operator;\n        observable.$ref = this.$ref;\n        return observable;\n    };\n    FirebaseObjectObservable.prototype.set = function (value) {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.set(value);\n    };\n    FirebaseObjectObservable.prototype.update = function (value) {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.update(value);\n    };\n    FirebaseObjectObservable.prototype.remove = function () {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.remove();\n    };\n    return FirebaseObjectObservable;\n}(rxjs_Observable.Observable));\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nexports.AngularFire = (function () {\n    function AngularFire(firebaseConfig, auth$$1, database$$1) {\n        this.firebaseConfig = firebaseConfig;\n        this.auth = auth$$1;\n        this.database = database$$1;\n    }\n    return AngularFire;\n}());\nexports.AngularFire = __decorate([\n    _angular_core.Injectable(),\n    __param(0, _angular_core.Inject(FirebaseConfig)),\n    __metadata(\"design:paramtypes\", [Object, exports.AngularFireAuth,\n        exports.AngularFireDatabase])\n], exports.AngularFire);\nfunction _getFirebase(config, appName) {\n    try {\n        if (appName) {\n            return firebase.initializeApp(config, appName);\n        }\n        else {\n            return firebase.initializeApp(config);\n        }\n    }\n    catch (e) {\n        return firebase.app(null);\n    }\n}\nfunction _getWindowLocation() {\n    return window.location;\n}\nfunction _getAuthBackend(app$$1) {\n    return new FirebaseSdkAuthBackend(app$$1);\n}\nfunction _getDefaultFirebase(config) {\n    config.databaseURL = stripTrailingSlash(config.databaseURL);\n    return config;\n}\nvar COMMON_PROVIDERS = [\n    {\n        provide: FirebaseApp,\n        useFactory: _getFirebase,\n        deps: [FirebaseConfig, FirebaseAppName]\n    },\n    exports.AngularFireAuth,\n    exports.AngularFire,\n    exports.AngularFireDatabase\n];\nvar FIREBASE_PROVIDERS = [\n    COMMON_PROVIDERS,\n    {\n        provide: AuthBackend,\n        useFactory: _getAuthBackend,\n        deps: [FirebaseApp]\n    },\n    {\n        provide: WindowLocation,\n        useFactory: _getWindowLocation\n    },\n];\nvar defaultFirebase = function (config) {\n    return [\n        { provide: FirebaseUserConfig, useValue: config },\n        { provide: FirebaseConfig, useFactory: _getDefaultFirebase, deps: [FirebaseUserConfig] }\n    ];\n};\nexports.AngularFireModule = AngularFireModule_1 = (function () {\n    function AngularFireModule() {\n    }\n    AngularFireModule.initializeApp = function (config, authConfig, appName) {\n        return {\n            ngModule: AngularFireModule_1,\n            providers: [\n                { provide: FirebaseUserConfig, useValue: config },\n                { provide: FirebaseConfig, useFactory: _getDefaultFirebase, deps: [FirebaseUserConfig] },\n                { provide: FirebaseAuthConfig, useValue: authConfig },\n                { provide: FirebaseAppName, useValue: appName }\n            ]\n        };\n    };\n    return AngularFireModule;\n}());\nexports.AngularFireModule = AngularFireModule_1 = __decorate([\n    _angular_core.NgModule({\n        providers: FIREBASE_PROVIDERS\n    })\n], exports.AngularFireModule);\nvar AngularFireModule_1;\n\nexports._getFirebase = _getFirebase;\nexports._getWindowLocation = _getWindowLocation;\nexports._getAuthBackend = _getAuthBackend;\nexports._getDefaultFirebase = _getDefaultFirebase;\nexports.COMMON_PROVIDERS = COMMON_PROVIDERS;\nexports.FIREBASE_PROVIDERS = FIREBASE_PROVIDERS;\nexports.defaultFirebase = defaultFirebase;\nexports.FirebaseListObservable = FirebaseListObservable;\nexports.FirebaseObjectObservable = FirebaseObjectObservable;\nexports.FirebaseListFactory = FirebaseListFactory;\nexports.FirebaseObjectFactory = FirebaseObjectFactory$$1;\nexports.firebaseAuthConfig = firebaseAuthConfig;\nexports.WindowLocation = WindowLocation;\nexports.FirebaseConfig = FirebaseConfig;\nexports.FirebaseApp = FirebaseApp;\nexports.FirebaseAuthConfig = FirebaseAuthConfig;\nexports.FirebaseRef = FirebaseRef;\nexports.FirebaseUrl = FirebaseUrl;\nexports.FirebaseUserConfig = FirebaseUserConfig;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/angularfire2.js":"var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as firebase from 'firebase';\nimport * as utils from './utils';\nimport { FirebaseConfig, FirebaseApp, WindowLocation, FirebaseUserConfig, FirebaseAuthConfig, FirebaseAppName } from './tokens';\nimport { Inject, Injectable, NgModule } from '@angular/core';\nimport { FirebaseSdkAuthBackend, AngularFireAuth, firebaseAuthConfig, AuthBackend, AuthMethods, AuthProviders } from './auth/index';\nimport { FirebaseListObservable, FirebaseObjectObservable, FirebaseListFactory, FirebaseObjectFactory, AngularFireDatabase } from './database/index';\nvar AngularFire = (function () {\n    function AngularFire(firebaseConfig, auth, database) {\n        this.firebaseConfig = firebaseConfig;\n        this.auth = auth;\n        this.database = database;\n    }\n    return AngularFire;\n}());\nAngularFire = __decorate([\n    Injectable(),\n    __param(0, Inject(FirebaseConfig)),\n    __metadata(\"design:paramtypes\", [Object, AngularFireAuth,\n        AngularFireDatabase])\n], AngularFire);\nexport { AngularFire };\nexport function _getFirebase(config, appName) {\n    try {\n        if (appName) {\n            return firebase.initializeApp(config, appName);\n        }\n        else {\n            return firebase.initializeApp(config);\n        }\n    }\n    catch (e) {\n        return firebase.app(null);\n    }\n}\nexport function _getWindowLocation() {\n    return window.location;\n}\nexport function _getAuthBackend(app) {\n    return new FirebaseSdkAuthBackend(app);\n}\nexport function _getDefaultFirebase(config) {\n    config.databaseURL = utils.stripTrailingSlash(config.databaseURL);\n    return config;\n}\nexport var COMMON_PROVIDERS = [\n    {\n        provide: FirebaseApp,\n        useFactory: _getFirebase,\n        deps: [FirebaseConfig, FirebaseAppName]\n    },\n    AngularFireAuth,\n    AngularFire,\n    AngularFireDatabase\n];\nexport var FIREBASE_PROVIDERS = [\n    COMMON_PROVIDERS,\n    {\n        provide: AuthBackend,\n        useFactory: _getAuthBackend,\n        deps: [FirebaseApp]\n    },\n    {\n        provide: WindowLocation,\n        useFactory: _getWindowLocation\n    },\n];\nexport var defaultFirebase = function (config) {\n    return [\n        { provide: FirebaseUserConfig, useValue: config },\n        { provide: FirebaseConfig, useFactory: _getDefaultFirebase, deps: [FirebaseUserConfig] }\n    ];\n};\nvar AngularFireModule = AngularFireModule_1 = (function () {\n    function AngularFireModule() {\n    }\n    AngularFireModule.initializeApp = function (config, authConfig, appName) {\n        return {\n            ngModule: AngularFireModule_1,\n            providers: [\n                { provide: FirebaseUserConfig, useValue: config },\n                { provide: FirebaseConfig, useFactory: _getDefaultFirebase, deps: [FirebaseUserConfig] },\n                { provide: FirebaseAuthConfig, useValue: authConfig },\n                { provide: FirebaseAppName, useValue: appName }\n            ]\n        };\n    };\n    return AngularFireModule;\n}());\nAngularFireModule = AngularFireModule_1 = __decorate([\n    NgModule({\n        providers: FIREBASE_PROVIDERS\n    })\n], AngularFireModule);\nexport { AngularFireModule };\nexport { AngularFireAuth, AngularFireDatabase, FirebaseListObservable, FirebaseObjectObservable, FirebaseListFactory, FirebaseObjectFactory, firebaseAuthConfig, AuthMethods, AuthProviders, WindowLocation };\nexport { FirebaseConfig, FirebaseApp, FirebaseAuthConfig, FirebaseRef, FirebaseUrl, FirebaseUserConfig } from './tokens';\nvar AngularFireModule_1;\n//# sourceMappingURL=angularfire2.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/interfaces.js":"export var OrderByOptions;\n(function (OrderByOptions) {\n    OrderByOptions[OrderByOptions[\"Child\"] = 0] = \"Child\";\n    OrderByOptions[OrderByOptions[\"Key\"] = 1] = \"Key\";\n    OrderByOptions[OrderByOptions[\"Value\"] = 2] = \"Value\";\n    OrderByOptions[OrderByOptions[\"Priority\"] = 3] = \"Priority\";\n})(OrderByOptions || (OrderByOptions = {}));\nexport var LimitToOptions;\n(function (LimitToOptions) {\n    LimitToOptions[LimitToOptions[\"First\"] = 0] = \"First\";\n    LimitToOptions[LimitToOptions[\"Last\"] = 1] = \"Last\";\n})(LimitToOptions || (LimitToOptions = {}));\nexport var QueryOptions;\n(function (QueryOptions) {\n    QueryOptions[QueryOptions[\"EqualTo\"] = 0] = \"EqualTo\";\n    QueryOptions[QueryOptions[\"StartAt\"] = 1] = \"StartAt\";\n    QueryOptions[QueryOptions[\"EndAt\"] = 2] = \"EndAt\";\n})(QueryOptions || (QueryOptions = {}));\n//# sourceMappingURL=interfaces.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/tokens.js":"import { OpaqueToken } from '@angular/core';\nexport var FirebaseConfig = new OpaqueToken('FirebaseUrl');\nexport var FirebaseApp = new OpaqueToken('FirebaseApp');\nexport var FirebaseAuthConfig = new OpaqueToken('FirebaseAuthConfig');\nexport var FirebaseUserConfig = new OpaqueToken('FirebaseUserConfig');\nexport var FirebaseAppName = new OpaqueToken('FirebaseAppName');\nexport var WindowLocation = new OpaqueToken('WindowLocation');\nexport var FirebaseRef = FirebaseApp;\nexport var FirebaseUrl = FirebaseConfig;\n//# sourceMappingURL=tokens.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/utils.js":"import { queue } from 'rxjs/scheduler/queue';\nexport function isNil(obj) {\n    return obj === undefined || obj === null;\n}\nexport function hasKey(obj, key) {\n    return obj && obj[key] !== undefined;\n}\nexport function isString(value) {\n    return typeof value === 'string';\n}\nexport function isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\nexport function isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nexport function isAFUnwrappedSnapshot(value) {\n    return typeof value.$key === 'string';\n}\nexport function isFirebaseQuery(value) {\n    return typeof value.orderByChild === 'function';\n}\nexport function isEmptyObject(obj) {\n    if (isNil(obj)) {\n        return false;\n    }\n    return Object.keys(obj).length === 0 && JSON.stringify(obj) === JSON.stringify({});\n}\nexport function unwrapMapFn(snapshot) {\n    var unwrapped = !isNil(snapshot.val()) ? snapshot.val() : { $value: null };\n    if ((/string|number|boolean/).test(typeof unwrapped)) {\n        unwrapped = {\n            $value: unwrapped\n        };\n    }\n    Object.defineProperty(unwrapped, '$key', {\n        value: snapshot.ref.key,\n        enumerable: false\n    });\n    Object.defineProperty(unwrapped, '$exists', {\n        value: function () {\n            return snapshot.exists();\n        },\n        enumerable: false\n    });\n    return unwrapped;\n}\nexport function checkForUrlOrFirebaseRef(urlOrRef, cases) {\n    if (isString(urlOrRef)) {\n        return cases.isUrl();\n    }\n    if (isFirebaseRef(urlOrRef)) {\n        return cases.isRef();\n    }\n    if (isFirebaseQuery(urlOrRef)) {\n        return cases.isQuery();\n    }\n    throw new Error('Provide a url or a Firebase database reference');\n}\nexport function stripTrailingSlash(value) {\n    if (value.substring(value.length - 1, value.length) === '/') {\n        return value.substring(0, value.length - 1);\n    }\n    else {\n        return value;\n    }\n}\nexport function stripLeadingSlash(value) {\n    if (value.substring(0, 1) === '/') {\n        return value.substring(1, value.length);\n    }\n    else {\n        return value;\n    }\n}\nvar ZoneScheduler = (function () {\n    function ZoneScheduler(zone) {\n        this.zone = zone;\n    }\n    ZoneScheduler.prototype.schedule = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.zone.run(function () { return queue.schedule.apply(queue, args); });\n    };\n    return ZoneScheduler;\n}());\nexport { ZoneScheduler };\n//# sourceMappingURL=utils.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/auth/auth_backend.js":"var AuthBackend = (function () {\n    function AuthBackend() {\n    }\n    return AuthBackend;\n}());\nexport { AuthBackend };\nexport var AuthProviders;\n(function (AuthProviders) {\n    AuthProviders[AuthProviders[\"Github\"] = 0] = \"Github\";\n    AuthProviders[AuthProviders[\"Twitter\"] = 1] = \"Twitter\";\n    AuthProviders[AuthProviders[\"Facebook\"] = 2] = \"Facebook\";\n    AuthProviders[AuthProviders[\"Google\"] = 3] = \"Google\";\n    AuthProviders[AuthProviders[\"Password\"] = 4] = \"Password\";\n    AuthProviders[AuthProviders[\"Anonymous\"] = 5] = \"Anonymous\";\n    AuthProviders[AuthProviders[\"Custom\"] = 6] = \"Custom\";\n})(AuthProviders || (AuthProviders = {}));\n;\nexport var AuthMethods;\n(function (AuthMethods) {\n    AuthMethods[AuthMethods[\"Popup\"] = 0] = \"Popup\";\n    AuthMethods[AuthMethods[\"Redirect\"] = 1] = \"Redirect\";\n    AuthMethods[AuthMethods[\"Anonymous\"] = 2] = \"Anonymous\";\n    AuthMethods[AuthMethods[\"Password\"] = 3] = \"Password\";\n    AuthMethods[AuthMethods[\"OAuthToken\"] = 4] = \"OAuthToken\";\n    AuthMethods[AuthMethods[\"CustomToken\"] = 5] = \"CustomToken\";\n})(AuthMethods || (AuthMethods = {}));\n;\nexport function authDataToAuthState(authData, providerData) {\n    if (!authData)\n        return null;\n    var providerId;\n    var uid = authData.uid;\n    var authState = { auth: authData, uid: uid, provider: null };\n    if (authData.isAnonymous) {\n        providerId = 'anonymous';\n        authState.provider = AuthProviders.Anonymous;\n        authState.anonymous = true;\n        return authState;\n    }\n    else if (authData.providerData[0] === undefined || authData.providerData[0] === null) {\n        providerId = 'custom';\n        authState.provider = AuthProviders.Custom;\n        return authState;\n    }\n    else {\n        providerId = authData.providerData[0].providerId;\n    }\n    switch (providerId) {\n        case 'github.com':\n            authState.github = providerData;\n            authState.provider = AuthProviders.Github;\n            break;\n        case 'twitter.com':\n            authState.twitter = providerData;\n            authState.provider = AuthProviders.Twitter;\n            break;\n        case 'facebook.com':\n            authState.facebook = providerData;\n            authState.provider = AuthProviders.Facebook;\n            break;\n        case 'google.com':\n            authState.google = providerData;\n            authState.provider = AuthProviders.Google;\n            break;\n        case 'password':\n            authState.provider = AuthProviders.Password;\n            break;\n        case 'custom':\n            authState.provider = AuthProviders.Custom;\n            break;\n        default:\n            throw new Error(\"Unsupported firebase auth provider \" + providerId);\n    }\n    return authState;\n}\nexport function stripProviderId(providerId) {\n    var providerStripped = /(.*)\\.com$/.exec(providerId);\n    if (providerStripped && providerStripped.length === 2) {\n        return providerStripped[1];\n    }\n    return null;\n}\n//# sourceMappingURL=auth_backend.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/auth/auth.js":"var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { FirebaseAuthConfig, WindowLocation } from '../tokens';\nimport * as utils from '../utils';\nimport { authDataToAuthState, AuthBackend, AuthMethods, stripProviderId } from './auth_backend';\nimport { mergeMap } from 'rxjs/operator/mergeMap';\nimport { of as observableOf } from 'rxjs/observable/of';\nimport { map } from 'rxjs/operator/map';\nvar kBufferSize = 1;\nexport var firebaseAuthConfig = function (config) {\n    return { provide: FirebaseAuthConfig, useValue: config };\n};\nvar AngularFireAuth = (function (_super) {\n    __extends(AngularFireAuth, _super);\n    function AngularFireAuth(_authBackend, loc, _config) {\n        var _this = _super.call(this, kBufferSize) || this;\n        _this._authBackend = _authBackend;\n        _this._config = _config;\n        _this._credentialCache = {};\n        var firstPass = true;\n        var onAuth = _this._authBackend.onAuth();\n        mergeMap.call(onAuth, function (authState) {\n            if (firstPass) {\n                firstPass = false;\n                if (['http:', 'https:'].indexOf(loc.protocol) > -1) {\n                    return map.call(_this._authBackend.getRedirectResult(), function (userCredential) {\n                        if (userCredential && userCredential.credential) {\n                            authState = attachCredentialToAuthState(authState, userCredential.credential, userCredential.credential.provider);\n                            _this._credentialCache[userCredential.credential.provider] = userCredential.credential;\n                        }\n                        return authState;\n                    });\n                }\n            }\n            return observableOf(authState);\n        })\n            .subscribe(function (authData) { return _this._emitAuthData(authData); });\n        return _this;\n    }\n    AngularFireAuth.prototype.login = function (obj1, obj2) {\n        var _this = this;\n        var config = null;\n        var credentials = null;\n        if (arguments.length > 2) {\n            return this._reject('Login only accepts a maximum of two arguments.');\n        }\n        else if (arguments.length == 2) {\n            credentials = obj1;\n            config = obj2;\n        }\n        else if (arguments.length == 1) {\n            if (obj1.password && obj1.email) {\n                credentials = obj1;\n                config = {};\n            }\n            else {\n                config = obj1;\n            }\n        }\n        config = this._mergeConfigs(config);\n        if (utils.isNil(config.method)) {\n            return this._reject('You must provide a login method');\n        }\n        var providerMethods = [AuthMethods.Popup, AuthMethods.Redirect, AuthMethods.OAuthToken];\n        if (providerMethods.indexOf(config.method) != -1) {\n            if (utils.isNil(config.provider)) {\n                return this._reject('You must include a provider to use this auth method.');\n            }\n        }\n        var credentialsMethods = [AuthMethods.Password, AuthMethods.OAuthToken, AuthMethods.CustomToken];\n        if (credentialsMethods.indexOf(config.method) != -1) {\n            if (!credentials) {\n                return this._reject('You must include credentials to use this auth method.');\n            }\n        }\n        switch (config.method) {\n            case AuthMethods.Popup:\n                return this._authBackend.authWithOAuthPopup(config.provider, this._scrubConfig(config))\n                    .then(function (userCredential) {\n                    _this._credentialCache[userCredential.credential.provider] = userCredential.credential;\n                    return authDataToAuthState(userCredential.user, userCredential.credential);\n                });\n            case AuthMethods.Redirect:\n                return this._authBackend.authWithOAuthRedirect(config.provider, this._scrubConfig(config));\n            case AuthMethods.Anonymous:\n                return this._authBackend.authAnonymously(this._scrubConfig(config));\n            case AuthMethods.Password:\n                return this._authBackend.authWithPassword(credentials);\n            case AuthMethods.OAuthToken:\n                return this._authBackend.authWithOAuthToken(credentials, this._scrubConfig(config));\n            case AuthMethods.CustomToken:\n                return this._authBackend.authWithCustomToken(credentials);\n        }\n    };\n    AngularFireAuth.prototype.logout = function () {\n        return this._authBackend.unauth();\n    };\n    AngularFireAuth.prototype.getAuth = function () {\n        console.warn(\"WARNING: the getAuth() API has changed behavior since adding support for Firebase 3.\\n    This will return null for the initial value when the page loads, even if the user is actually logged in.\\n    Please observe the actual authState asynchronously by subscribing to the auth service: af.auth.subscribe().\\n    The getAuth method will be removed in future releases\");\n        return this._authBackend.getAuth();\n    };\n    AngularFireAuth.prototype.createUser = function (credentials) {\n        return this._authBackend.createUser(credentials);\n    };\n    AngularFireAuth.prototype._mergeConfigs = function (config) {\n        if (this._config == null)\n            return config;\n        return Object.assign({}, this._config, config);\n    };\n    AngularFireAuth.prototype._reject = function (msg) {\n        return new Promise(function (res, rej) {\n            return rej(msg);\n        });\n    };\n    AngularFireAuth.prototype._scrubConfig = function (config, scrubProvider) {\n        if (scrubProvider === void 0) { scrubProvider = true; }\n        var scrubbed = Object.assign({}, config);\n        if (scrubProvider) {\n            delete scrubbed.provider;\n        }\n        delete scrubbed.method;\n        return scrubbed;\n    };\n    AngularFireAuth.prototype._emitAuthData = function (authData) {\n        if (authData == null) {\n            this.next(null);\n        }\n        else {\n            if (authData.auth && authData.auth.providerData && authData.auth.providerData[0]) {\n                var providerId = authData.auth.providerData[0].providerId;\n                var providerCredential = this._credentialCache[providerId];\n                if (providerCredential) {\n                    authData = attachCredentialToAuthState(authData, providerCredential, providerId);\n                }\n            }\n            this.next(authData);\n        }\n    };\n    return AngularFireAuth;\n}(ReplaySubject));\nAngularFireAuth = __decorate([\n    Injectable(),\n    __param(1, Inject(WindowLocation)),\n    __param(2, Optional()), __param(2, Inject(FirebaseAuthConfig)),\n    __metadata(\"design:paramtypes\", [AuthBackend, Object, Object])\n], AngularFireAuth);\nexport { AngularFireAuth };\nfunction attachCredentialToAuthState(authState, credential, providerId) {\n    if (!authState)\n        return authState;\n    authState[stripProviderId(providerId)] = credential;\n    return authState;\n}\n//# sourceMappingURL=auth.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/auth/firebase_sdk_auth_backend.js":"var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as firebase from 'firebase';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { FirebaseApp } from '../tokens';\nimport { ZoneScheduler } from '../utils';\nimport { authDataToAuthState, AuthBackend, AuthProviders } from './auth_backend';\nvar _a = firebase.auth, FacebookAuthProvider = _a.FacebookAuthProvider, GithubAuthProvider = _a.GithubAuthProvider, GoogleAuthProvider = _a.GoogleAuthProvider, TwitterAuthProvider = _a.TwitterAuthProvider;\nimport { map } from 'rxjs/operator/map';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { observeOn } from 'rxjs/operator/observeOn';\nvar FirebaseSdkAuthBackend = (function (_super) {\n    __extends(FirebaseSdkAuthBackend, _super);\n    function FirebaseSdkAuthBackend(_fbApp) {\n        var _this = _super.call(this) || this;\n        _this._fbAuth = _fbApp.auth();\n        return _this;\n    }\n    FirebaseSdkAuthBackend.prototype.createUser = function (creds) {\n        return castPromise(this._fbAuth.createUserWithEmailAndPassword(creds.email, creds.password))\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.getAuth = function () {\n        return authDataToAuthState(this._fbAuth.currentUser);\n    };\n    FirebaseSdkAuthBackend.prototype.onAuth = function () {\n        var _this = this;\n        var stateChange = Observable.create(function (observer) {\n            return _this._fbAuth.onAuthStateChanged(observer);\n        });\n        var authState = map.call(stateChange, function (user) {\n            if (!user)\n                return null;\n            return authDataToAuthState(user, user.providerData[0]);\n        });\n        return observeOn.call(authState, new ZoneScheduler(Zone.current));\n    };\n    FirebaseSdkAuthBackend.prototype.unauth = function () {\n        return this._fbAuth.signOut();\n    };\n    FirebaseSdkAuthBackend.prototype.authWithCustomToken = function (token) {\n        return castPromise((this._fbAuth.signInWithCustomToken(token)))\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.authAnonymously = function () {\n        return castPromise(this._fbAuth.signInAnonymously())\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.authWithPassword = function (creds) {\n        return castPromise(this._fbAuth.signInWithEmailAndPassword(creds.email, creds.password))\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.authWithOAuthPopup = function (provider, options) {\n        var providerFromFirebase = this._enumToAuthProvider(provider);\n        if (options.scope) {\n            options.scope.forEach(function (scope) { return providerFromFirebase.addScope(scope); });\n        }\n        return castPromise(this._fbAuth.signInWithPopup(providerFromFirebase));\n    };\n    FirebaseSdkAuthBackend.prototype.authWithOAuthRedirect = function (provider, options) {\n        return castPromise(this._fbAuth.signInWithRedirect(this._enumToAuthProvider(provider)));\n    };\n    FirebaseSdkAuthBackend.prototype.authWithOAuthToken = function (credential) {\n        return castPromise(this._fbAuth.signInWithCredential(credential))\n            .then(function (user) { return authDataToAuthState(user); });\n    };\n    FirebaseSdkAuthBackend.prototype.getRedirectResult = function () {\n        return fromPromise(castPromise(this._fbAuth.getRedirectResult()));\n    };\n    FirebaseSdkAuthBackend.prototype._enumToAuthProvider = function (providerId) {\n        switch (providerId) {\n            case AuthProviders.Github:\n                return new GithubAuthProvider();\n            case AuthProviders.Twitter:\n                return new TwitterAuthProvider();\n            case AuthProviders.Facebook:\n                return new FacebookAuthProvider();\n            case AuthProviders.Google:\n                return new GoogleAuthProvider();\n            default:\n                throw new Error(\"Unsupported firebase auth provider \" + providerId);\n        }\n    };\n    return FirebaseSdkAuthBackend;\n}(AuthBackend));\nFirebaseSdkAuthBackend = __decorate([\n    Injectable(),\n    __param(0, Inject(FirebaseApp)),\n    __metadata(\"design:paramtypes\", [Object])\n], FirebaseSdkAuthBackend);\nexport { FirebaseSdkAuthBackend };\nfunction castPromise(promiseLike) {\n    return Promise.resolve(promiseLike);\n}\n//# sourceMappingURL=firebase_sdk_auth_backend.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/database/database.js":"var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Inject, Injectable } from '@angular/core';\nimport { FirebaseApp, FirebaseConfig } from '../tokens';\nimport { FirebaseListFactory } from './index';\nimport * as utils from '../utils';\nimport { FirebaseObjectFactory } from './index';\nvar AngularFireDatabase = (function () {\n    function AngularFireDatabase(fbConfig, fbApp) {\n        this.fbConfig = fbConfig;\n        this.fbApp = fbApp;\n    }\n    AngularFireDatabase.prototype.list = function (urlOrRef, opts) {\n        var _this = this;\n        return utils.checkForUrlOrFirebaseRef(urlOrRef, {\n            isUrl: function () { return FirebaseListFactory(_this.fbApp.database().refFromURL(getAbsUrl(_this.fbConfig, urlOrRef)), opts); },\n            isRef: function () { return FirebaseListFactory(urlOrRef); }\n        });\n    };\n    AngularFireDatabase.prototype.object = function (urlOrRef, opts) {\n        var _this = this;\n        return utils.checkForUrlOrFirebaseRef(urlOrRef, {\n            isUrl: function () { return FirebaseObjectFactory(_this.fbApp.database().refFromURL(getAbsUrl(_this.fbConfig, urlOrRef)), opts); },\n            isRef: function () { return FirebaseObjectFactory(urlOrRef); }\n        });\n    };\n    return AngularFireDatabase;\n}());\nAngularFireDatabase = __decorate([\n    Injectable(),\n    __param(0, Inject(FirebaseConfig)),\n    __param(1, Inject(FirebaseApp)),\n    __metadata(\"design:paramtypes\", [Object, Object])\n], AngularFireDatabase);\nexport { AngularFireDatabase };\nfunction getAbsUrl(root, url) {\n    if (!(/^[a-z]+:\\/\\/.*/.test(url))) {\n        url = root.databaseURL + '/' + utils.stripLeadingSlash(url);\n    }\n    return url;\n}\n//# sourceMappingURL=database.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/database/firebase_list_factory.js":"import * as firebase from 'firebase';\nimport { FirebaseListObservable } from './firebase_list_observable';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { observeQuery } from './query_observable';\nimport * as utils from '../utils';\nimport { mergeMap } from 'rxjs/operator/mergeMap';\nimport { map } from 'rxjs/operator/map';\nexport function FirebaseListFactory(absoluteUrlOrDbRef, _a) {\n    var _b = _a === void 0 ? {} : _a, preserveSnapshot = _b.preserveSnapshot, _c = _b.query, query = _c === void 0 ? {} : _c;\n    var ref;\n    utils.checkForUrlOrFirebaseRef(absoluteUrlOrDbRef, {\n        isUrl: function () { return ref = firebase.database().refFromURL(absoluteUrlOrDbRef); },\n        isRef: function () { return ref = absoluteUrlOrDbRef; },\n        isQuery: function () { return ref = absoluteUrlOrDbRef; },\n    });\n    if ((utils.isFirebaseRef(absoluteUrlOrDbRef) ||\n        utils.isString(absoluteUrlOrDbRef)) &&\n        utils.isEmptyObject(query)) {\n        return firebaseListObservable(ref, { preserveSnapshot: preserveSnapshot });\n    }\n    var queryObs = observeQuery(query);\n    return new FirebaseListObservable(ref, function (subscriber) {\n        var sub = mergeMap.call(map.call(queryObs, function (query) {\n            var queried = ref;\n            if (query.orderByChild) {\n                queried = queried.orderByChild(query.orderByChild);\n            }\n            else if (query.orderByKey) {\n                queried = queried.orderByKey();\n            }\n            else if (query.orderByPriority) {\n                queried = queried.orderByPriority();\n            }\n            else if (query.orderByValue) {\n                queried = queried.orderByValue();\n            }\n            if (utils.hasKey(query, \"equalTo\")) {\n                queried = queried.equalTo(query.equalTo);\n                if (utils.hasKey(query, \"startAt\") || utils.hasKey(query, \"endAt\")) {\n                    throw new Error('Query Error: Cannot use startAt or endAt with equalTo.');\n                }\n                if (!utils.isNil(query.limitToFirst)) {\n                    queried = queried.limitToFirst(query.limitToFirst);\n                }\n                if (!utils.isNil(query.limitToLast)) {\n                    queried = queried.limitToLast(query.limitToLast);\n                }\n                return queried;\n            }\n            if (utils.hasKey(query, \"startAt\")) {\n                if (utils.hasKey(query.startAt, \"value\")) {\n                    queried = queried.startAt(query.startAt.value, query.startAt.key);\n                }\n                else {\n                    queried = queried.startAt(query.startAt);\n                }\n            }\n            if (utils.hasKey(query, \"endAt\")) {\n                queried = queried.endAt(query.endAt);\n            }\n            if (!utils.isNil(query.limitToFirst) && query.limitToLast) {\n                throw new Error('Query Error: Cannot use limitToFirst with limitToLast.');\n            }\n            if (!utils.isNil(query.limitToFirst)) {\n                queried = queried.limitToFirst(query.limitToFirst);\n            }\n            if (!utils.isNil(query.limitToLast)) {\n                queried = queried.limitToLast(query.limitToLast);\n            }\n            return queried;\n        }), function (queryRef, ix) {\n            return firebaseListObservable(queryRef, { preserveSnapshot: preserveSnapshot });\n        })\n            .subscribe(subscriber);\n        return function () { return sub.unsubscribe(); };\n    });\n}\nfunction firebaseListObservable(ref, _a) {\n    var preserveSnapshot = (_a === void 0 ? {} : _a).preserveSnapshot;\n    var toValue = preserveSnapshot ? (function (snapshot) { return snapshot; }) : utils.unwrapMapFn;\n    var toKey = preserveSnapshot ? (function (value) { return value.key; }) : (function (value) { return value.$key; });\n    var listObs = new FirebaseListObservable(ref, function (obs) {\n        var handles = [];\n        var hasLoaded = false;\n        var lastLoadedKey = null;\n        var array = [];\n        ref.once('value', function (snap) {\n            if (snap.exists()) {\n                snap.forEach(function (child) {\n                    lastLoadedKey = child.key;\n                });\n                if (array.find(function (child) { return toKey(child) === lastLoadedKey; })) {\n                    hasLoaded = true;\n                    obs.next(array);\n                }\n            }\n            else {\n                hasLoaded = true;\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        var addFn = ref.on('child_added', function (child, prevKey) {\n            array = onChildAdded(array, toValue(child), toKey, prevKey);\n            if (hasLoaded) {\n                obs.next(array);\n            }\n            else if (child.key === lastLoadedKey) {\n                hasLoaded = true;\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        handles.push({ event: 'child_added', handle: addFn });\n        var remFn = ref.on('child_removed', function (child) {\n            array = onChildRemoved(array, toValue(child), toKey);\n            if (hasLoaded) {\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        handles.push({ event: 'child_removed', handle: remFn });\n        var chgFn = ref.on('child_changed', function (child, prevKey) {\n            array = onChildChanged(array, toValue(child), toKey, prevKey);\n            if (hasLoaded) {\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        handles.push({ event: 'child_changed', handle: chgFn });\n        return function () {\n            handles.forEach(function (item) {\n                ref.off(item.event, item.handle);\n            });\n        };\n    });\n    return observeOn.call(listObs, new utils.ZoneScheduler(Zone.current));\n}\nexport function onChildAdded(arr, child, toKey, prevKey) {\n    if (!arr.length) {\n        return [child];\n    }\n    return arr.reduce(function (accumulator, curr, i) {\n        if (!prevKey && i === 0) {\n            accumulator.push(child);\n        }\n        accumulator.push(curr);\n        if (prevKey && prevKey === toKey(curr)) {\n            accumulator.push(child);\n        }\n        return accumulator;\n    }, []);\n}\nexport function onChildChanged(arr, child, toKey, prevKey) {\n    var childKey = toKey(child);\n    return arr.reduce(function (accumulator, val, i) {\n        var valKey = toKey(val);\n        if (!prevKey && i == 0) {\n            accumulator.push(child);\n            if (valKey !== childKey) {\n                accumulator.push(val);\n            }\n        }\n        else if (valKey === prevKey) {\n            accumulator.push(val);\n            accumulator.push(child);\n        }\n        else if (valKey !== childKey) {\n            accumulator.push(val);\n        }\n        return accumulator;\n    }, []);\n}\nexport function onChildRemoved(arr, child, toKey) {\n    var childKey = toKey(child);\n    return arr.filter(function (c) { return toKey(c) !== childKey; });\n}\nexport function onChildUpdated(arr, child, toKey, prevKey) {\n    return arr.map(function (v, i, arr) {\n        if (!prevKey && !i) {\n            return child;\n        }\n        else if (i > 0 && toKey(arr[i - 1]) === prevKey) {\n            return child;\n        }\n        else {\n            return v;\n        }\n    });\n}\n//# sourceMappingURL=firebase_list_factory.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/database/firebase_list_observable.js":"var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from 'rxjs/Observable';\nimport * as utils from '../utils';\nvar FirebaseListObservable = (function (_super) {\n    __extends(FirebaseListObservable, _super);\n    function FirebaseListObservable($ref, subscribe) {\n        var _this = _super.call(this, subscribe) || this;\n        _this.$ref = $ref;\n        return _this;\n    }\n    FirebaseListObservable.prototype.lift = function (operator) {\n        var observable = new FirebaseListObservable(this.$ref);\n        observable.source = this;\n        observable.operator = operator;\n        observable.$ref = this.$ref;\n        return observable;\n    };\n    FirebaseListObservable.prototype.push = function (val) {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.ref.push(val);\n    };\n    FirebaseListObservable.prototype.update = function (item, value) {\n        var _this = this;\n        return this._checkOperationCases(item, {\n            stringCase: function () { return _this.$ref.ref.child(item).update(value); },\n            firebaseCase: function () { return item.update(value); },\n            snapshotCase: function () { return item.ref.update(value); },\n            unwrappedSnapshotCase: function () { return _this.$ref.ref.child(item.$key).update(value); }\n        });\n    };\n    FirebaseListObservable.prototype.remove = function (item) {\n        var _this = this;\n        if (!item) {\n            return this.$ref.ref.remove();\n        }\n        return this._checkOperationCases(item, {\n            stringCase: function () { return _this.$ref.ref.child(item).remove(); },\n            firebaseCase: function () { return item.remove(); },\n            snapshotCase: function () { return item.ref.remove(); },\n            unwrappedSnapshotCase: function () { return _this.$ref.ref.child(item.$key).remove(); }\n        });\n    };\n    FirebaseListObservable.prototype._checkOperationCases = function (item, cases) {\n        if (utils.isString(item)) {\n            return cases.stringCase();\n        }\n        else if (utils.isFirebaseRef(item)) {\n            return cases.firebaseCase();\n        }\n        else if (utils.isFirebaseDataSnapshot(item)) {\n            return cases.snapshotCase();\n        }\n        else if (utils.isAFUnwrappedSnapshot(item)) {\n            return cases.unwrappedSnapshotCase();\n        }\n        throw new Error(\"Method requires a key, snapshot, reference, or unwrapped snapshot. Got: \" + typeof item);\n    };\n    return FirebaseListObservable;\n}(Observable));\nexport { FirebaseListObservable };\n//# sourceMappingURL=firebase_list_observable.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/database/firebase_object_factory.js":"import { FirebaseObjectObservable } from './index';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport * as firebase from 'firebase';\nimport * as utils from '../utils';\nexport function FirebaseObjectFactory(absoluteUrlOrDbRef, _a) {\n    var preserveSnapshot = (_a === void 0 ? {} : _a).preserveSnapshot;\n    var ref;\n    utils.checkForUrlOrFirebaseRef(absoluteUrlOrDbRef, {\n        isUrl: function () { return ref = firebase.database().refFromURL(absoluteUrlOrDbRef); },\n        isRef: function () { return ref = absoluteUrlOrDbRef; }\n    });\n    var objectObservable = new FirebaseObjectObservable(function (obs) {\n        var fn = ref.on('value', function (snapshot) {\n            obs.next(preserveSnapshot ? snapshot : utils.unwrapMapFn(snapshot));\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        return function () { return ref.off('value', fn); };\n    }, ref);\n    return observeOn.call(objectObservable, new utils.ZoneScheduler(Zone.current));\n}\n//# sourceMappingURL=firebase_object_factory.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/database/firebase_object_observable.js":"var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from 'rxjs/Observable';\nvar FirebaseObjectObservable = (function (_super) {\n    __extends(FirebaseObjectObservable, _super);\n    function FirebaseObjectObservable(subscribe, $ref) {\n        var _this = _super.call(this, subscribe) || this;\n        _this.$ref = $ref;\n        return _this;\n    }\n    FirebaseObjectObservable.prototype.lift = function (operator) {\n        var observable = new FirebaseObjectObservable();\n        observable.source = this;\n        observable.operator = operator;\n        observable.$ref = this.$ref;\n        return observable;\n    };\n    FirebaseObjectObservable.prototype.set = function (value) {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.set(value);\n    };\n    FirebaseObjectObservable.prototype.update = function (value) {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.update(value);\n    };\n    FirebaseObjectObservable.prototype.remove = function () {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.remove();\n    };\n    return FirebaseObjectObservable;\n}(Observable));\nexport { FirebaseObjectObservable };\n//# sourceMappingURL=firebase_object_observable.js.map","/home/travis/build/npmtest/node-npmtest-angularfire2/node_modules/angularfire2/database/query_observable.js":"import { Observable } from 'rxjs/Observable';\nimport { of as observableOf } from 'rxjs/observable/of';\nimport { combineLatest } from 'rxjs/operator/combineLatest';\nimport { merge } from 'rxjs/operator/merge';\nimport { map } from 'rxjs/operator/map';\nimport { auditTime } from 'rxjs/operator/auditTime';\nimport { OrderByOptions, LimitToOptions } from '../interfaces';\nimport { hasKey, isNil } from '../utils';\nexport function observeQuery(query, audit) {\n    if (audit === void 0) { audit = true; }\n    if (isNil(query)) {\n        return observableOf(null);\n    }\n    return Observable.create(function (observer) {\n        var combined = combineLatest.call(getOrderObservables(query), getStartAtObservable(query), getEndAtObservable(query), getEqualToObservable(query), getLimitToObservables(query));\n        if (audit) {\n            combined = auditTime.call(combined, 0);\n        }\n        combined\n            .subscribe(function (_a) {\n            var orderBy = _a[0], startAt = _a[1], endAt = _a[2], equalTo = _a[3], limitTo = _a[4];\n            var serializedOrder = {};\n            if (!isNil(orderBy) && !isNil(orderBy.value)) {\n                switch (orderBy.key) {\n                    case OrderByOptions.Key:\n                        serializedOrder = { orderByKey: orderBy.value };\n                        break;\n                    case OrderByOptions.Priority:\n                        serializedOrder = { orderByPriority: orderBy.value };\n                        break;\n                    case OrderByOptions.Value:\n                        serializedOrder = { orderByValue: orderBy.value };\n                        break;\n                    case OrderByOptions.Child:\n                        serializedOrder = { orderByChild: orderBy.value };\n                        break;\n                }\n            }\n            if (!isNil(limitTo) && !isNil(limitTo.value)) {\n                switch (limitTo.key) {\n                    case LimitToOptions.First:\n                        serializedOrder.limitToFirst = limitTo.value;\n                        break;\n                    case LimitToOptions.Last: {\n                        serializedOrder.limitToLast = limitTo.value;\n                        break;\n                    }\n                }\n            }\n            if (startAt !== undefined) {\n                serializedOrder.startAt = startAt;\n            }\n            if (endAt !== undefined) {\n                serializedOrder.endAt = endAt;\n            }\n            if (equalTo !== undefined) {\n                serializedOrder.equalTo = equalTo;\n            }\n            observer.next(serializedOrder);\n        });\n    });\n}\nexport function getOrderObservables(query) {\n    var observables = ['orderByChild', 'orderByKey', 'orderByValue', 'orderByPriority']\n        .map(function (key, option) {\n        return ({ key: key, option: option });\n    })\n        .filter(function (_a) {\n        var key = _a.key, option = _a.option;\n        return !isNil(query[key]);\n    })\n        .map(function (_a) {\n        var key = _a.key, option = _a.option;\n        return mapToOrderBySelection(query[key], option);\n    });\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    else if (observables.length > 1) {\n        return merge.apply(observables[0], observables.slice(1));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next(null);\n        });\n    }\n}\nexport function getLimitToObservables(query) {\n    var observables = ['limitToFirst', 'limitToLast']\n        .map(function (key, option) { return ({ key: key, option: option }); })\n        .filter(function (_a) {\n        var key = _a.key, option = _a.option;\n        return !isNil(query[key]);\n    })\n        .map(function (_a) {\n        var key = _a.key, option = _a.option;\n        return mapToLimitToSelection(query[key], option);\n    });\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    else if (observables.length > 1) {\n        var mergedObs = merge.apply(observables[0], observables.slice(1));\n        return mergedObs;\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next(null);\n        });\n    }\n}\nexport function getStartAtObservable(query) {\n    if (query.startAt instanceof Observable) {\n        return query.startAt;\n    }\n    else if (hasKey(query, 'startAt')) {\n        return new Observable(function (subscriber) {\n            subscriber.next(query.startAt);\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next(undefined);\n        });\n    }\n}\nexport function getEndAtObservable(query) {\n    if (query.endAt instanceof Observable) {\n        return query.endAt;\n    }\n    else if (hasKey(query, 'endAt')) {\n        return new Observable(function (subscriber) {\n            subscriber.next(query.endAt);\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next(undefined);\n        });\n    }\n}\nexport function getEqualToObservable(query) {\n    if (query.equalTo instanceof Observable) {\n        return query.equalTo;\n    }\n    else if (hasKey(query, 'equalTo')) {\n        return new Observable(function (subscriber) {\n            subscriber.next(query.equalTo);\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next(undefined);\n        });\n    }\n}\nfunction mapToOrderBySelection(value, key) {\n    if (value instanceof Observable) {\n        return map\n            .call(value, function (value) {\n            return ({ value: value, key: key });\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next({ key: key, value: value });\n        });\n    }\n}\nfunction mapToLimitToSelection(value, key) {\n    if (value instanceof Observable) {\n        return map\n            .call(value, function (value) { return ({ value: value, key: key }); });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next({ key: key, value: value });\n        });\n    }\n}\nfunction hasObservableProperties(query) {\n    if (query.orderByKey instanceof Observable)\n        return true;\n    return false;\n}\n//# sourceMappingURL=query_observable.js.map"}